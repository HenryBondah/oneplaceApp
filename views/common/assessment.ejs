<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Assessment</title>
    <style>
        main {
            text-align: center;
            margin: 0 auto;
            width: 90%;
        }
        th, td {
            padding: 10px;
            border: 1px solid #ddd;
            text-align: left;
        }
        .form-group {
            margin-bottom: 15px;
            text-align: left;
        }
        button {
            margin-top: 10px;
        }
        .main {
            color: green;
            font-size: 1.2em;
        }
        .flash-success {
            color: green;
            font-weight: bold;
        }
        .flash-error {
            color: red;
            font-weight: bold;
        }
        #save-scores-form {
            width: 100%; 
            max-width: 1700px; 
            margin: 0 auto; 
            overflow-x: auto; 
        }
        .center-link {
            display: flex;
            justify-content: center;
            margin-bottom: 20px;
        }
        .center-link button {
            margin: 0 10px;
            padding: 10px 20px;
            border: none;
            background-color: #007bff;
            color: white;
            cursor: pointer;
            border-radius: 5px;
            transition: background-color 0.3s ease;
        }
        .center-link button:hover {
            background-color: #0056b3;
        }
        .table-container {
            overflow-x: auto;
        }
    </style>
</head>
<body>
    <main>
        <br>
        <div class="center-link">
            <button onclick="location.href='/common/classDashboard?classId=<%= classId %>'">Back</button>
        </div>
        <hr>
        <% if (messages && messages.success && messages.success.length > 0) { %>
            <div class="flash-success"><%= messages.success %></div>
        <% } %>
        <% if (messages && messages.error && messages.error.length > 0) { %>
            <div class="flash-error"><%= messages.error %></div>
        <% } %>
        <h1>Assessments for <%= className %></h1>
        <h2>Subject: <%= subjectName %></h2>
    
        <div class="assigned-employees">
            <% employees.forEach(function(employee) { %>
                <div>
                    <% if (employee.main) { %>
                        <span class="main">â€¢</span>
                    <% } %>
                    <%= employee.first_name %> <%= employee.last_name %>
                </div>
            <% }); %>
        </div>
    
        <hr>
    
        <!-- Scores Section -->
        <form id="save-scores-form">
            <div class="table-container">
                <table>
                    <thead>
                        <tr>
                            <th>Student Name</th>
                            <% assessments.forEach(function(assessment) { %>
                                <th>
                                    <%= assessment.title %> (<%= assessment.weight %>%)<br>
                                    <%= assessment.category %><br>
                                    <hr>
                                    Score Out Of: <%= assessment.max_score %>
                                </th>
                            <% }); %>
                            <th>Total Subject Score</th>
                            <th>Total Percentage</th>
                            <th>Grade</th>
                            <th>Position</th>
                        </tr>
                    </thead>
                    
                    <tbody id="students-table-body">
                        <% 
                        students.sort((a, b) => a.position - b.position);
    
                        function getOrdinalSuffix(i) {
                            const j = i % 10,
                                  k = i % 100;
                            if (j == 1 && k != 11) {
                                return "st";
                            }
                            if (j == 2 && k != 12) {
                                return "nd";
                            }
                            if (j == 3 && k != 13) {
                                return "rd";
                            }
                            return "th";
                        }
                        %>
                    
                        <% students.forEach(function(student, index) { %>
                            <tr>
                                <td><%= student.first_name %> <%= student.last_name %></td>
                                <% assessments.forEach(function(assessment) { %>
                                    <td>
                                        <input type="number" 
                                               name="scores[<%= student.student_id %>][<%= assessment.assessment_id %>]" 
                                               min="0" 
                                               max="<%= assessment.max_score %>" 
                                               step="0.1" 
                                               value="<%= student.scores ? student.scores[assessment.assessment_id] : '' %>">
                                    </td>
                                <% }); %>
    
                                <td><%= student.total_subject_score !== undefined && student.total_subject_score !== null ? parseFloat(student.total_subject_score).toFixed(2) : '-' %></td>
                                <td><%= student.total_percentage !== undefined && student.total_percentage !== null ? parseFloat(student.total_percentage).toFixed(2) : '-' %> %</td>
                                <td><%= student.grade ? student.grade : '-' %></td>
                                <td><%= student.position !== undefined && student.position !== null ? student.position + getOrdinalSuffix(student.position) : '-' %></td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
            <div class="center-link">
                <button type="button" id="save-all-scores-button">Save All Scores</button>
            </div>
        </form>
    </main>
    

<script>
    // Handle saving scores functionality
    document.getElementById('save-all-scores-button').addEventListener('click', async function() {
        const formElement = document.getElementById('save-scores-form');
        const formData = new FormData(formElement);
    
        // Transform FormData into a format suitable for sending as JSON
        const scoresData = {};
        formData.forEach((value, key) => {
            const matches = key.match(/^scores\[(\d+)\]\[(\d+)\]$/);
            if (matches) {
                const studentId = matches[1];
                const assessmentId = matches[2];
    
                if (!scoresData[studentId]) {
                    scoresData[studentId] = {};
                }
                scoresData[studentId][assessmentId] = value;
            }
        });
    
        const subjectId = "<%= subjectId %>";
        const classId = "<%= classId %>";
    
        try {
            // Send scores data as JSON to the server
            const response = await fetch(`/common/saveAllScores?subjectId=${subjectId}&classId=${classId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ scores: scoresData })
            });
    
            const responseData = await response.json();
    
            if (response.ok) {
                alert(responseData.message);
                window.location.reload();
            } else {
                alert(responseData.error);
            }
        } catch (error) {
            alert('An unexpected error occurred while saving scores.');
        }
    });
    
    // Adding event listeners to dynamically calculate total scores, percentages, grades, and positions
    document.querySelectorAll('input[type="number"]').forEach(input => {
        input.addEventListener('input', calculateTotals);
    });
    
    function calculateTotals() {
        const studentsTableBody = document.getElementById('students-table-body');
        const studentRows = studentsTableBody.querySelectorAll('tr');
    
        studentRows.forEach(studentRow => {
            const scoreInputs = studentRow.querySelectorAll('input[type="number"]');
            let totalScore = 0;
            let totalWeight = 0;
    
            scoreInputs.forEach(input => {
                const maxScore = parseFloat(input.getAttribute('max'));
                const score = parseFloat(input.value);
                if (!isNaN(score)) {
                    totalScore += score;
                    totalWeight += maxScore;
                }
            });
    
            // Calculate percentage
            const totalPercentage = totalWeight > 0 ? (totalScore / totalWeight) * 100 : 0;
    
            // Find grade (using a basic grading system; modify as needed)
            let grade;
            if (totalPercentage >= 90) {
                grade = 'A';
            } else if (totalPercentage >= 80) {
                grade = 'B';
            } else if (totalPercentage >= 70) {
                grade = 'C';
            } else if (totalPercentage >= 60) {
                grade = 'D';
            } else {
                grade = 'F';
            }
    
            // Update values in the respective columns
            const totalSubjectScoreCell = studentRow.querySelector('td:nth-last-child(4)');
            const totalPercentageCell = studentRow.querySelector('td:nth-last-child(3)');
            const gradeCell = studentRow.querySelector('td:nth-last-child(2)');
            const positionCell = studentRow.querySelector('td:nth-last-child(1)');
    
            totalSubjectScoreCell.textContent = totalScore ? totalScore.toFixed(2) : '-';
            totalPercentageCell.textContent = totalPercentage ? totalPercentage.toFixed(2) + '%' : '-';
            gradeCell.textContent = totalScore ? grade : '-';
        });
    
        // Calculate and assign positions based on total score
        assignPositions();
    }
    
    function assignPositions() {
        const studentsTableBody = document.getElementById('students-table-body');
        const studentRows = Array.from(studentsTableBody.querySelectorAll('tr'));
    
        // Create an array of student rows with their total score
        const studentScores = studentRows.map(row => {
            const totalScoreCell = row.querySelector('td:nth-last-child(4)');
            const totalScore = parseFloat(totalScoreCell.textContent);
            return {
                row,
                totalScore: isNaN(totalScore) ? 0 : totalScore
            };
        });
    
        // Sort by total score in descending order
        studentScores.sort((a, b) => b.totalScore - a.totalScore);
    
        // Assign positions
        studentScores.forEach((student, index) => {
            const positionCell = student.row.querySelector('td:nth-last-child(1)');
            positionCell.textContent = student.totalScore ? (index + 1) + getOrdinalSuffix(index + 1) : '-';
        });
    }
    
    function getOrdinalSuffix(i) {
        const j = i % 10,
              k = i % 100;
        if (j == 1 && k != 11) {
            return "st";
        }
        if (j == 2 && k != 12) {
            return "nd";
        }
        if (j == 3 && k != 13) {
            return "rd";
        }
        return "th";
    }
    </script>
    

</body>
</html>
