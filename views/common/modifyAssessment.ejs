<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Modify Assessment</title>
    <style>
        .form-container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            background-color: #f9f9f9;
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            font-weight: bold;
            margin-left: 10px;
        }
        input[type="text"], input[type="number"], select {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }
        .action-buttons {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
        }
        .action-buttons button {
            padding: 10px 15px;
            font-size: 16px;
            color: white;
            background-color: #007bff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        .action-buttons button:hover {
            background-color: #0056b3;
        }
        .action-buttons .delete-button {
            background-color: red;
        }
        .action-buttons .delete-button:hover {
            background-color: darkred;
        }
        .class-checkbox, .subject-checkbox {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }
        .class-checkbox input, .subject-checkbox input {
            margin-right: 10px;
        }
        .subject-container {
            margin-left: 20px;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="link-to-next-back">
        <a href="/common/manageAssessment?organizationId=<%= organizationId %>&termId=<%= termId %>">Back to Manage Assessments</a>
    </div>
    <hr>
    <h1 style="text-align: center;">Modify Assessment</h1>

    <div class="form-container">
        <% if (messages && messages.error) { %>
            <div class="alert alert-danger">
                <%= messages.error %>
            </div>
        <% } %>
        <% if (messages && messages.success) { %>
            <div class="alert alert-success">
                <%= messages.success %>
            </div>
        <% } %>

        <form id="modifyAssessmentForm">
            <input type="hidden" name="groupId" value="<%= assessments[0].group_id %>">
            <input type="hidden" name="organizationId" value="<%= organizationId %>">
            <input type="hidden" name="termId" value="<%= termId %>">

            <div class="form-group">
                <label for="title">Test Name:</label>
                <input type="text" name="title" value="<%= assessments[0].title %>" required>
            </div>
            <div class="form-group">
                <label for="weight">Weight (%):</label>
                <input type="number" name="weight" value="<%= assessments[0].weight %>" step="0.1" required>
            </div>
            <div class="form-group">
                <label for="maxScore">Score Out Of:</label>
                <input type="number" name="maxScore" value="<%= assessments[0].max_score %>" required>
            </div>
            <div class="form-group">
                <label for="category">Category:</label>
                <select name="category" required>
                    <option value="Class Assessment" <%= assessments[0].category === 'Class Assessment' ? 'selected' : '' %>>Class Assessment</option>
                    <option value="Exams Assessment" <%= assessments[0].category === 'Exams Assessment' ? 'selected' : '' %>>Exams Assessment</option>
                    <option value="Other" <%= assessments[0].category === 'Other' ? 'selected' : '' %>>Other</option>
                </select>
            </div>

            <h4>Assign Test to Classes and Subjects</h4>
            <div class="form-group">
                <input type="checkbox" id="selectAll" onchange="selectAllClassesAndSubjects()">
                <label for="selectAll">Select All</label>
            </div>
            <div class="class-container">
                <% classes.forEach((cls) => { %>
                    <div class="class-checkbox">
                        <input type="checkbox" id="class_<%= cls.class_id %>" name="classes[]" value="<%= cls.class_id %>"
                               <%= assessments.some(a => a.class_id === cls.class_id) ? 'checked' : '' %>
                               onchange="toggleSubjects('subjects-container-<%= cls.class_id %>', this)">
                        <label for="class_<%= cls.class_id %>"><%= cls.class_name %></label>
                    </div>
                    <div id="subjects-container-<%= cls.class_id %>" class="subject-container" style="<%= assessments.some(a => a.class_id === cls.class_id) ? 'display: block;' : 'display: none;' %>">
                        <% subjects.forEach(subject => { %>
                            <% if (subject.class_id === cls.class_id) { %>
                                <div class="subject-checkbox">
                                    <input type="checkbox" class="subject-checkbox-<%= cls.class_id %>" name="subjects[]" value="<%= subject.subject_id %>"
                                           <%= assessments.some(a => a.class_id === cls.class_id && a.subject_id === subject.subject_id) ? 'checked' : '' %>>
                                    <label for="subject_<%= subject.subject_id %>"><%= subject.subject_name %></label>
                                </div>
                            <% } %>
                        <% }); %>
                    </div>
                <% }); %>
            </div>

            <div class="action-buttons">
                <button type="button" onclick="updateAssessment()">Update Assessment</button>
                <button type="button" class="delete-button" onclick="deleteAssessment()">Delete Assessment</button>
            </div>
        </form>
    </div>

    <script>
        function toggleSubjects(containerId, checkbox) {
            const container = document.getElementById(containerId);
            container.style.display = checkbox.checked ? 'block' : 'none';
        }
    
        function selectAllClassesAndSubjects() {
            const selectAllCheckbox = document.getElementById('selectAll');
            const classCheckboxes = document.querySelectorAll('.class-checkbox input[type="checkbox"]');
            const subjectCheckboxes = document.querySelectorAll('.subject-checkbox input[type="checkbox"]');
    
            classCheckboxes.forEach(checkbox => {
                checkbox.checked = selectAllCheckbox.checked;
                toggleSubjects(`subjects-container-${checkbox.value}`, checkbox);
            });
    
            subjectCheckboxes.forEach(checkbox => {
                checkbox.checked = selectAllCheckbox.checked;
            });
        }
    
        async function updateAssessment() {
            const confirmUpdate = confirm('Are you sure you want to update this assessment? This will modify all selected classes and subjects.');
            if (!confirmUpdate) return;
    
            const formElement = document.getElementById('modifyAssessmentForm');
            const formData = new FormData(formElement);
    
            const classes = formData.getAll('classes[]');
            const subjects = formData.getAll('subjects[]');
    
            const response = await fetch('/common/modifyAssessment', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    groupId: formData.get('groupId'),
                    title: formData.get('title'),
                    weight: formData.get('weight'),
                    maxScore: formData.get('maxScore'),
                    category: formData.get('category'),
                    classes: classes,
                    subjects: subjects,
                    organizationId: formData.get('organizationId'),
                    termId: formData.get('termId')
                })
            });
    
            if (response.ok) {
                alert('Assessment updated successfully.');
                window.location.href = `/common/manageAssessment?organizationId=${formData.get('organizationId')}&termId=${formData.get('termId')}`;
            } else {
                alert('Error updating assessment.');
            }
        }
    
        async function deleteAssessment() {
            const confirmDelete = confirm('Are you sure you want to delete this assessment? This action cannot be undone.');
            if (!confirmDelete) return;
    
            const formData = new FormData(document.getElementById('modifyAssessmentForm'));
    
            const response = await fetch('/common/deleteAssessment', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ groupId: formData.get('groupId') })
            });
    
            if (response.ok) {
                alert('Assessment deleted successfully.');
                window.location.href = `/common/manageAssessment?organizationId=${formData.get('organizationId')}&termId=${formData.get('termId')}`;
            } else {
                alert('Error deleting assessment.');
            }
        }
    </script>
    
</body>
</html>
