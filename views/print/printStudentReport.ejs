<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Student Report</title>
    <style>
        .actions {
            text-align: center;
            margin-bottom: 20px;
        }

        /* Container for the report background with watermark */
        .student-report-background {
            position: relative;
            width: 100%;
        }

        /* Watermark as a background for the report */
        .student-report-background::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: url('<%= session.logo %>'); /* Organization logo as watermark */
            background-repeat: no-repeat;
            background-position: center;
            background-size: 300px 300px; /* Adjust watermark size */
            opacity: 0.09; /* Make the watermark light */
            z-index: 0; /* Ensure watermark is behind all content */
            pointer-events: none; /* Make it non-interactive */
        }

        .student-report {
            position: relative;
            z-index: 1; /* Ensure report content stays above watermark */
            border: 1px solid #ccc;
            padding: 20px;
            margin-bottom: 20px;
            background-color: #fff;
            max-width: 800px;
            margin: 20px auto;
            box-sizing: border-box;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            page-break-after: always; /* Ensure each report is on its own page */
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 13px;
            text-align: center;
        }

        .header img.logo,
        .header img.student-image {
            width: 55px;
            height: 60px;
            object-fit: cover;
            border-radius: 8px;
        }

        .header h1,
        .header h2,

        .header h3 {
            margin: 0;
            text-align: center;
            white-space: nowrap;
        }

        th,
        td {
            border: 1px solid #ddd;
            padding: 5px;
            text-align: left;
            font-size: 11px;
        }

        th {
            background-color: #f2f2f2;
        }

        .remarks {
            display: flex;
            justify-content: space-between;
            align-items: flex-start; /* Align remarks and signature to the top */
            gap: 30px;
            position: relative;
            top: -20px;
            /* margin: 20px auto; */
        }

        .remarks-container {
            display: flex;
            flex-direction: column;
            width: 80%;
        }

        .remark-line {
            display: flex;
            align-items: center; /* Align label, textarea, and arrow */
            /* gap: 10px; */
            position: relative;
        }

        .remark-line label {
            font-size: 14px;
            color: #333;
            white-space: nowrap;
            min-width: 50px; /* Fixed width for labels */
        }

        .remark-line textarea {
            flex-grow: 1;
            border: none;
            border-bottom: 1px dotted #333; /* Dotted underline for textarea */
            font-size: 14px;
            padding: 5px;
            background: none;
            outline: none;
            width: calc(100% - 160px); /* Fill remaining space */
            overflow-wrap: break-word; /* Allow text to wrap */
            word-break: break-word;
            resize: none; /* Disable manual resizing */
            height: auto; /* Allow the height to adjust based on content */
        }

        .remark-arrow {
            font-size: 14px;
            cursor: pointer;
            user-select: none; /* Prevent text selection */
            padding: 0 5px;
            transform: rotate(0deg);
            transition: transform 0.3s ease;
            font-family: Arial, sans-serif; /* Professional dropdown caret style */
            position: relative;
            top: 10px;
        }

        .remark-arrow.open {
            transform: rotate(180deg);
        }

        .remark-dropdown {
            position: absolute;
            top: 100%;
            left: 0;
            width: calc(100% - 160px);
            background-color: #fff;
            border: 1px solid #ccc;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            z-index: 100;
            display: none;
            max-height: 200px;
            overflow-y: auto;
        }

        .remark-dropdown-option {
            padding: 8px 12px;
            cursor: pointer;
            font-size: 14px;
        }

        .remark-dropdown-option:hover {
            background-color: #f0f0f0;
        }

        .signature-info {
            text-align: center;
            position: relative;
            top: 80px;
            right: 10px;
        }

        .signature-info img {
            max-width: 100px;
            display: block;
            margin: 0 auto 10px auto;
            position: relative;
            top: 20px;
        }

        .promotion-table select {
            width: auto;
            padding: 5px;
            border: none;
            background: none;
            font-size: 14px;
            appearance: none; /* Remove default styles for select */
        }

        .grade-interpretation {
            border: 1px solid #000;
            font-size: 11px;
            max-width: 600px;
            margin: 5px auto;
            line-height: 1.5;
        }

        .grade-interpretation h6 {
            margin: 1px;
            font-size: 14px;
            text-align: center;
        }

        .grade-interpretation-content {
            display: flex;
            flex-wrap: wrap;
            /* gap: 10px; */
            align-items: center;
            justify-content: center;
        }

        .grade-interpretation-item {
            display: inline-block;
        }

        @media print {
            @page {
                size: A4 portrait;
                margin: 10mm;
            }

            body * {
                visibility: hidden; /* Hide everything during print */
            }

            .student-report-background,
            .student-report-background * {
                visibility: visible; /* Show the background and report content */
            }

            .student-report {
                width: 100%; /* Maximize width usage for the report */
                margin: 0; /* Remove any extra margins */
                padding: 1mm; /* Add some padding to ensure content doesn't touch the edges */
                page-break-after: always; /* Each report prints on a new page */
            }

            .actions {
                display: none; /* Hide the print buttons */
            }

            .school-info h2,
            .school-info h1,
            .school-info h3,
            .school-info h4 {
                font-size: inherit; /* Keep the original font size during printing */
                margin: 0; /* Ensure no additional margin is added during print */
            }
        }
    </style>
</head>

<body>
    <div class="actions no-print">
        <button class="btn btn-primary" onclick="window.print()">Print Report</button>
        <a href="/print/reportSettings?classId=<%= classId %>&termId=<%= termId %>" class="btn btn-primary">Report Settings</a>
    </div>

    <% if (students.length === 0) { %>
        <p>No student data available</p>
    <% } else { %>
        <% students.forEach((student, index) => { %>
            <div class="student-report" id="report-<%= index %>">
                <div class="student-report-background">
                    <div class="header">
                        <% if (session.logo) { %>
                            <img src="<%= session.logo %>" alt="Organization Logo" class="logo" />
                        <% } else { %>
                            <img src="/images/default_logo.png" alt="Default Logo" class="logo" />
                        <% } %>

                        <div class="school-info">
                            <h1><%= orgName %></h1>
                            <h3><%= orgAddress %></h3>
                            <h3><%= email %> | <%= orgPhone %></h3>
                        </div>

                        <% if (student.image_url && student.image_url !== 'profilePlaceholder.png') { %>
                            <img src="<%= student.image_url %>?v=<%= new Date().getTime() %>" alt="Student Image" class="student-image">
                        <% } else { %>
                            <img src="/images/profilePlaceholder.png" alt="Placeholder Image" class="student-image">
                        <% } %>
                    </div>

                    <div class="info">
                        <table>
                            <tr>
                                <td>Student Name:</td>
                                <td><%= student.first_name %> <%= student.last_name %></td>
                                <td>Term:</td>
                                <td><%= term ? term.term_name : 'No term available' %></td>
                            </tr>
                            <tr>
                                <td>Student ID:</td>
                                <td><%= student.student_id %></td>
                                <td>School Year:</td>
                                <td><%= schoolYearLabel %></td>
                            </tr>
                            <tr>
                                <td>Class:</td>
                                <td><%= student.class_name %></td>
                                <td>Position in Class:</td>
                                <td><%= student.positionInClass %></td>
                            </tr>
                        </table>
                    </div>
                    <br>

                    <div class="subjects">
                        <table>
                            <thead>
                                <tr>
                                    <th>Subject</th>
                                    <th>Class Score</th>
                                    <th>Exams Score</th>
                                    <th>Other Score</th>
                                    <th>Total Score</th>
                                    <th>Total Percentage</th>
                                    <th>Grade</th>
                                    <th>Position</th>
                                    <th>Remarks</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% (student.subjects || []).forEach(subject => { %>
                                    <tr>
                                        <td><%= subject.subject_name %></td>
                                        <td><%= subject.classAssessmentScore !== '-' ? parseFloat(subject.classAssessmentScore).toFixed(2) : '-' %></td>
                                        <td><%= subject.examsAssessmentScore !== '-' ? parseFloat(subject.examsAssessmentScore).toFixed(2) : '-' %></td>
                                        <td><%= subject.otherAssessmentScore !== '-' ? parseFloat(subject.otherAssessmentScore).toFixed(2) : '-' %></td>
                                        <td><%= subject.totalScore !== '-' ? parseFloat(subject.totalScore).toFixed(2) : '-' %></td>
                                        <td><%= subject.totalPercentage !== '-' ? parseFloat(subject.totalPercentage).toFixed(2) : '-' %> %</td>
                                        <td><%= subject.grade %></td>
                                        <td><%= subject.position !== '-' ? subject.position : '-' %></td>
                                        <td><%= subject.remarks || '-' %></td>
                                    </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>

                    <br>

                    <div class="attendance-info">
                        <table class="promotion-table">
                            <tr>
                                <td>Overall Percentage:</td>
                                <td><%= student.overallPercentage %> %</td>
                                <td>Attendance:</td>
                                <td><%= student.attendance.presentDays %>/<%= student.attendance.totalDays %></td>
                                <td>Vacation Date:</td>
                                <td><%= termEndDate %></td>
                                <td>School Reopens:</td>
                                <td><%= schoolReopenDate ? new Date(schoolReopenDate).toLocaleDateString() : 'TBA' %></td>
                            </tr>
                            <% if (activatePromotion) { %>
                            <tr>
                            
                                    <td>
                                        <select name="promotionStatus-<%= student.student_id %>" id="promotionStatus-<%= student.student_id %>" onchange="updateClass('<%= student.student_id %>')">
                                            <option value="Promoted" <%= student.promotionStatus === 'Promoted' ? 'selected' : '' %>>Promoted To:</option>
                                            <option value="Repeated" <%= student.promotionStatus === 'Repeated' ? 'selected' : '' %>>Repeated In:</option>
                                        </select>
                                    </td>
                                    <td id="promotionClass-<%= student.student_id %>"><%= student.promotionClass %></td> 
    
                                </tr>
                            <% } %>
                        </table>
                    </div>

                    <br>

                    <div class="remarks">
                        <div class="remarks-container">
                            <% const remarksLists = { ConductRemarks: conductRemarks, AttitudeRemarks: attitudeRemarks, InterestRemarks: interestRemarks, TeacherRemarks: teacherRemarks }; %>
                            <% Object.keys(remarksLists).forEach((remarkType) => { %>
                                <div class="remark-line">
                                    <label for="<%= remarkType %>-<%= index %>"><%= remarkType.replace(/([a-z])([A-Z])/g, '$1 $2').replace('Remarks', ' Remarks') %>:</label>
                                    <span class="remark-arrow" onclick="toggleDropdown('<%= remarkType %>', <%= index %>)">▼</span>

                                    <textarea id="<%= remarkType %>-<%= index %>" name="<%= remarkType %>-<%= index %>" onfocus="this.select();"><%= student[remarkType] %></textarea>

                                    <div class="remark-dropdown" id="dropdown-<%= remarkType %>-<%= index %>">
                                        <% remarksLists[remarkType].forEach(function (remark) { %>
                                            <div class="remark-dropdown-option" onclick="selectRemark('<%= remarkType %>', <%= index %>, '<%= remark.remark %>')">
                                                <%= remark.remark %>
                                            </div>
                                        <% }); %>
                                    </div>
                                </div>
                            <% }); %>
                        </div>

                        <div class="signature-info">
                            <% if (signatureImageUrl) { %>
                                <img src="<%= signatureImageUrl %>" alt="Signature Image">
                            <% } else { %>
                                <p>No signature available.</p>
                            <% } %>
                            <h3>Signature</h3>
                        </div>
                    </div>

                    <!-- Grade Interpretation Box -->                        
                    <div class="grade-interpretation">
                        <h6>Interpretation of Grades:</h6>

                        <div class="grade-interpretation-content">
                            <% scoreRemarks.forEach(function (remark) { %>
                                <span class="grade-interpretation-item"><%= remark.fromPercentage %> to <%= remark.toPercentage %> = <%= remark.remark %>;</span>
                            <% }); %>
                        </div>
                    </div>

                </div>
            </div>
        <% }); %>
    <% } %>

    <script>
        // Automatically resize textarea fields to fit content
        document.addEventListener('input', function (e) {
            if (e.target.tagName === 'TEXTAREA') {
                e.target.style.height = 'auto';
                e.target.style.height = e.target.scrollHeight + 'px';
            }
        });

        // Trigger resize for pre-filled textarea fields
        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('textarea').forEach(function (textarea) {
                textarea.style.height = 'auto';
                textarea.style.height = textarea.scrollHeight + 'px';
            });
        });

        // Toggle dropdown visibility
        function toggleDropdown(remarkType, index) {
            const dropdown = document.getElementById(`dropdown-${remarkType}-${index}`);
            dropdown.style.display = dropdown.style.display === 'block' ? 'none' : 'block';
            const arrow = document.querySelector(`[onclick="toggleDropdown('${remarkType}', ${index})"]`);
            arrow.classList.toggle('open');
        }

        // Select a remark from dropdown
        function selectRemark(remarkType, index, remark) {
            const textarea = document.getElementById(`${remarkType}-${index}`);
            textarea.value = remark;
            textarea.style.height = 'auto';
            textarea.style.height = textarea.scrollHeight + 'px';
            toggleDropdown(remarkType, index);
        }

        // Handle promotion status change
        function updateClass(studentId) {
            const statusSelect = document.getElementById('promotionStatus-' + studentId);
            const selectedStatus = statusSelect.value;
            const classCell = document.getElementById('promotionClass-' + studentId);

            const promotedClassName = '<%= promotedClass %>';
            const repeatedClassName = '<%= repeatedClass %>';

            if (selectedStatus === 'Promoted') {
                classCell.innerHTML = promotedClassName;
            } else if (selectedStatus === 'Repeated') {
                classCell.innerHTML = repeatedClassName;
            }
        }

        // Close dropdowns when clicking outside
        document.addEventListener('click', function (e) {
            if (!e.target.matches('.remark-arrow, .remark-dropdown-option')) {
                document.querySelectorAll('.remark-dropdown').forEach(function (dropdown) {
                    dropdown.style.display = 'none';
                });
                document.querySelectorAll('.remark-arrow.open').forEach(function (arrow) {
                    arrow.classList.remove('open');
                });
            }
        });
    </script>
</body>

</html>
